package guava
  __home__("kiwi")

  fn initialize()
    if !global.has_key("guava_tests")
      global.guava_tests = {}
      global.guava_test_results = []
    end
  end

  fn assert(condition, msg = "Assertion failed.")
    throw msg when condition == false
  end
  
  fn register_test(name, t)
    guava::initialize()
    global.guava_tests.set(name, t)
  end
  
  fn run_test(name, test, results = [])
    guava::initialize()
    print string::padend("Running test: ${name} ", 45, " ")
  
    test_start = time::ticks()
    passed = false
  
    try
      test()
      passed = true
    catch (err)
      println err  
    end
    
    duration = time::ticksms(time::ticks() - test_start)
    results.push({ "name": t, "result": passed, "duration": duration })
  
    println (passed ? "passed" : "failed").uppercase() + " in ${duration}ms"
  end
  
  fn run_tests()
    guava::initialize()
    results = []
    
    for t in global.guava_tests do
      guava::run_test(t, global.guava_tests.get(t), results)
    end
  
    return results
  end
end

export "guava"