/#
Summary: A package containing functionality for working with files and directories.
#/
package fs
  /#
  Summary: Get the absolute path of a file.
  Params:
    - _path: The path to a file or a filename.
  Returns: String
  #/
  fn abspath(_path)
    return __fileabspath__(_path)
  end

  /#
  Summary: Append text to a file.
  Params:
    - _path: The path to a file or a filename.
    - _text: The text to append.
  Returns: Boolean
  #/
  fn append(_path, _text)
    return __appendtext__(_path, _text)
  end

  /#
  Summary: Changes the current directory.
  Params:
    - _path: The path to a directory.
  Returns: Boolean
  #/
  fn chdir(_path)
    return __chdir__(_path)
  end

  /#
  Summary: Combine two paths.
  Params:
    - _source: The first path.
    - _dest: The second path.
  Returns: String
  #/
  fn combine(_first, _second)
    return __combine__(_first, _second)
  end

  /#
  Summary: Copy a file.
  Params:
    - _source: The source path.
    - _dest: The destination path.
  Returns: Boolean
  #/
  fn copy(_source, _dest)
    return __copyfile__(_source, _dest)
  end

  /#
  Summary: Copy a directory recursively.
  Params:
    - _source: The source path.
    - _dest: The destination path.
  Returns: Boolean
  #/
  fn copyr(_source, _dest)
    return __copyr__(_source, _dest)
  end

  /#
  Summary: Get the current working directory.
  Returns: Boolean
  #/
  fn cwd()
    return __cwd__()
  end

  /#
  Summary: Check if a path exists.
  Params:
    - _path: The path to a file or directory.
  Returns: Boolean
  #/
  fn exists(_path)
    return __isfile__(_path)
  end

  /#
  Summary: Get a file extension.
  Params:
    - _path: The path to a file or a filename.
  Returns: String
  #/
  fn ext(_path)
    return __fileext__(_path)
  end

  /#
  Summary: Get the filename from a file path.
  Params:
    - _path: The path to a file or a filename.
  Returns: String
  #/
  fn filename(_path)
    return __filename__(_path)
  end

  /#
  Summary: Get size of a file in bytes.
  Params:
    - _path: The path to a file or a filename.
  Returns: Float
  #/
  fn filesize(_path)
    return __filesize__(_path)
  end

  /#
  Summary: Get a list of files from a glob pattern.
  Params:
    - _glob: The glob pattern.
  Returns: String
  #/
  fn glob(_glob)
    return __glob__(_glob)
  end

  /#
  Summary: Check if a path exists.
  Params:
    - _path: The path to a directory.
  Returns: Boolean
  #/
  fn isdir(_path)
    return __isdir__(_path)
  end

  /#
  Summary: Retrieve a List of directory entries.
  Params:
    - _path: The directory path.
  Returns: List
  #/
  fn listdir(_path)
    return __listdir__(_path)
  end

  /#
  Summary: Creates a directory.
  Params:
    - _path: The directory path.
  Returns: Boolean
  #/
  fn mkdir(_path)
    return __mkdir__(_path)
  end

  /#
  Summary: Creates a directory and all subdirectories specified in the path.
  Params:
    - _path: The directory path.
  Returns: Boolean
  #/
  fn mkdirp(_path)
    return __mkdirp__(_path)
  end

  /#
  Summary: Move or rename a file.
  Params:
    - _source: The source path.
    - _dest: The destination path.
  Returns: Boolean
  #/
  fn move(_source, _dest)
    return __movefile__(_source, _dest)
  end

  /#
  Summary: Get the parent directory of an absolute path.
  Params:
    - _path: The path to a file.
  Returns: String
  #/
  fn parentdir(_path)
    return __filepath__(_path)
  end

  /#
  Summary: Get the content of a file as a string.
  Params:
    - _path: The path to a file.
  Returns: String
  #/
  fn read(_path)
    return __readfile__(_path)
  end

  /#
  Summary: Get the content of a file as a list of strings.
  Params:
    - _path: The path to a file.
  Returns: List
  #/
  fn readlines(_path)
    return __readlines__(_path)
  end

  /#
  Summary: Get the content of a file as a list of strings.
  Params:
    - _path: The path to a file.
    - _offset: The position in the file to read from.
    - _size: The number of bytes to read from the file.
  Returns: List
  #/
  fn readbytes(_path, _offset, _size)
    return __readbytes__(_path, _offset, _size)
  end

  /#
  Summary: Get the content of a file as a list of bytes.
  Params:
    - _path: The path to a file.
  Returns: List
  #/
  fn getbytes(_path)
    return __readbytes__(_path)
  end

  /#
  Summary: Delete a file.
  Params:
    - _path: The path to a file or a filename.
  Returns: Boolean
  #/
  fn remove(_path)
    return __deletefile__(_path)
  end

  /#
  Summary: Delete a directory.
  Params:
    - _path: The path to a directory.
  Returns: Boolean
  #/
  fn rmdir(_path)
    return __rmdir__(_path)
  end

  /#
  Summary: Delete a directory and all of its contents recursively.
  Params:
    - _path: The path to a directory.
  Returns: Boolean
  #/
  fn rmdirf(_path)
    return __rmdirf__(_path)
  end

  /#
  Summary: Create an empty file.
  Params:
    - _path: The path to a file or a filename.
  Returns: Boolean
  #/
  fn touch(_path)
    return __createfile__(_path)
  end
  
  /#
  Summary: Gets the path to the temporary directory.
  Returns: String
  #/
  fn tmpdir()
    return __tmpdir__()
  end

  /#
  Summary: Write text to a file. This overwrites the file if it exists.
  Params:
    - _path: The path to a file or a filename.
    - _text: The text to write.
  Returns: Boolean
  #/
  fn write(_path, _text = "")
    return __writetext__(_path, _text)
  end

  /#
  Summary: Write a line of text to a file. This always appends to a file.
  Params:
    - _path: The path to a file or a filename.
    - _text: The text to append.
  Returns: Boolean
  #/
  fn writeln(_path, _text)
    return __writeline__(_path, _text)
  end

  /#
  Summary: Write a list of bytes to a file. This overwrites the file if it exists.
  Params:
    - _path: The path to a file or a filename.
    - _bytes: The list of bytes to write.
  #/
  fn writebytes(_path, _text)
    __writebytes__(_path, _text)
  end
end

export "fs"