
package curl
  /#
  Summary: Executes a curl command to perform HTTP requests.
  Params:
    - `url`: The URL to which the request will be sent.
    - `method`: HTTP method (e.g., "GET", "POST").
    - `headers`: A dictionary of headers to include in the request.
    - `data`: Optional data to send with the request (useful for POST, PUT).
    - `capture_output`: Boolean flag to capture the output (default true).
  Returns: The command output as a string if `capture_output` is true, or the return code otherwise.
  #/
  fn request(url: string, method: string = "GET", headers: hashmap = {}, data: string = "", capture_output: boolean = true)
    cmd_args = ["-s", "-X", method, url]
    
    # Add headers as curl arguments
    for header_key, header_value in headers do
      cmd_args.append("-H")
      cmd_args.append(header_key + ": " + header_value)
    end
    
    # Add data if provided and if the method allows it
    if data != "" && (method == "POST" || method == "PUT")
      cmd_args.append("-d")
      cmd_args.append(data)
    end
    
    # Run the command and capture output if specified
    return sys::command("curl", cmd_args, capture_output)
  end

  # Convenience functions for common HTTP methods

  # Sends a GET request to the specified URL with optional headers.
  fn get(url: string, headers: hashmap = {}, capture_output: boolean = true)
    return curl::request(url, "GET", headers, "", capture_output)
  end

  # Sends a POST request to the specified URL with optional headers and data.
  fn post(url: string, headers: hashmap = {}, data: string = "", capture_output: boolean = true)
    return curl::request(url, "POST", headers, data, capture_output)
  end

  # Sends a PUT request to the specified URL with optional headers and data.
  fn put(url: string, headers: hashmap = {}, data: string = "", capture_output: boolean = true)
    return curl::request(url, "PUT", headers, data, capture_output)
  end

  # Sends a DELETE request to the specified URL with optional headers.
  fn delete(url: string, headers: hashmap = {}, capture_output: boolean = true)
    return curl::request(url, "DELETE", headers, "", capture_output)
  end
end

export "curl"