package signal
  const SIGHUP = 1
  const SIGINT = 2
  const SIGQUIT = 3
  const SIGILL = 4
  const SIGABRT = 6
  const SIGFPE = 8
  const SIGKILL = 9
  const SIGSEGV = 11
  const SIGPIPE = 13
  const SIGALRM = 14
  const SIGTERM = 15
  const SIGUSR1 = 10
  const SIGUSR2 = 12
  const SIGCHLD = 17
  const SIGCONT = 18
  const SIGSTOP = 19
  const SIGTSTP = 20
  const SIGTTIN = 21
  const SIGTTOU = 22
  const SIGBUS = 7
  const SIGTRAP = 5
  const SIGURG = 23
  const SIGXCPU = 24
  const SIGXFSZ = 25
  const SIGVTALRM = 26
  const SIGPROF = 27
  const SIGWINCH = 28
  const SIGSYS = 31
end

export "signal"

package signal
  /#
  @summary: Sends a signal to a process.
  @params:
    `pid`: The PID (process identifier) of a process.
    `signum`: The signal to send.
  #/
  fn send(pid: integer, signum: integer)
    __sig_send__(pid, signum)
  end

  /#
  @summary: Raises a signal.
  @params:
    - `signum`: The signal to raise.
  #/
  fn raise(signum: integer): integer
    __sig_raise__(signum)
  end

  /#
  @summary: Traps a signal with a callback handler.
  @params:
    - `signum`: The signal to trap.
    - `callback`: A lambda for handling the signal.
  #/
  fn trap(signum: integer, callback: lambda): integer
    throw std::error::create("SignalError", "Uncatchable signal: ${signum}") 
      when [signal::SIGKILL, signal::SIGSTOP].contains(signum)
    __sig_trap__(signum, callback)
  end
end

export "signal"