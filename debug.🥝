/# a script for experimentation and debugging. #/

#println math::random(0, 100)
/#
start = time::ticks()
n = 0
sum = 0
while n < math::random(1000, 5000) do
  repeat math::random(5, 10) do
    sum += 1
  end
  n += 1
end
stop = time::ticks()
duration = time::ticksms(stop - start)

println "duration: ${duration}ms"
println "sum: ${sum}"
println "n: ${n}"
#/

fruits = ["kiwi", "strawberry", "pineapple", "lime", "mango", "guava"]
list = []

# iterate list
for fruit in fruits do
  list.push(fruit)
end

guava::assert(list == ["kiwi", "strawberry", "pineapple", "lime", "mango", "guava"])
list.clear()

# iterate index
for fruit, index in fruits do 
  list.push(index)
end

guava::assert(list == [0, 1, 2, 3, 4, 5])
list.clear()

# iterate inline list
for item in ["kiwi", "is", "fun"] do
  list.push(item)
end

guava::assert(list == ["kiwi", "is", "fun"])
list.clear()

# iterate an inline list with an index
for item, index in ["kiwi", "is", "fun"] do
  list.push(index)
end

guava::assert(list == [0, 1, 2])
list.clear()

# iterate a range
for i in [0..5] do
  list.push(i)
end

guava::assert(list == [0, 1, 2, 3, 4, 5])
list.clear()

# nested while loops
ii = 0
test_sum = 0
while ii < 10 do
  ii += 1
  j = 0
  
  while j < 10 do
    j += 1
    test_sum += 1
  end
end

guava::assert(test_sum == 100)

list = [], i = 1
while i <= 10 do
  list << "Item ${i}"
  i += 1
end

counter = 0
for item, index in list do
  counter += 1
  next when index == 5
end

guava::assert(counter == 5)

counter = 0
for item, index in list do
  counter += 1
  break when index == 5
end

guava::assert(counter == 6)

# repeat-loop
sum = 0
repeat 10 as i do
  sum += i
end

guava::assert(sum == 55)

x = 2
repeat 4 do
  x *= x
end

guava::assert(x == 65536)
