# a script for debugging and experimentation (and fun!)

fn benchmark_getbytes(path)
  start = time::ticks()
  file_bytes = fs::getbytes(path).size()
  stop = time::ticks()
  
  println "size: ${file_bytes} byte(s), duration: ${time::ticksms(stop - start)}ms"

  return file_bytes
end

fn run()
  start = time::ticks()
  total_bytes = 0

  for path in fs::glob("./**/*") do
    total_bytes += benchmark_getbytes(path)
  end

  println "total byte(s): ${total_bytes}, total duration: ${time::ticksms(time::ticks() - start)}ms"
  return total_bytes
end

task = fork run()

println "This will print first!"

println "task is ${task}"

while __task_busy__() do
  println "sleeping..."
  __task_sleep__(100)
end

println "task result is: ${__task_result__(task)}"