package runnable
  ["time", "fs"].each(with (lib) do parse("import '@kiwi/${lib}'") end)

  __home__("x")

  class Client < Runnable
    def initialize() 
      @hash = ""
      @path = ""
    end

    override def run(path)
      @path = path
      println("Client running and listening to ${@path}")
      action()
    end
  end

  class Server < Runnable
    def initialize()
      @hash = ""
      @path = ""
    end
    
    override def run(path)
      @path = path
      println("Server running and listening to ${@path}")
      runnable::listen(path)
    end
  end

  fn listen(path)
    if !fs::exists(path)
      fs::touch(path)
    end

    while true do
      time::delay(200)
      action()
    end
  end
end

abstract class Runnable
  abstract def run(path)
end

fn action() end